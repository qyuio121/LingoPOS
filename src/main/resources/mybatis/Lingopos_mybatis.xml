<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mybatis.Lingopos_mybatis">

<select id="LingoLoginResult" parameterType="java.util.Map" resultType="loginDTO">
	select u.id,o.ownerno,adminno,storeno,isallowed from user u left join owner o on u.id=o.id left join admin a on u.id=a.id left join store s on u.id=s.id where u.id = #{id}
</select>
<select id="LingoLoginGetPwd" parameterType="java.util.Map" resultType="java.lang.String">
	select pwd from user where id = #{id}
</select>
 <insert id="LingoAdminInsert" parameterType="java.util.Map">
 	insert into admin(adminnick,id) value(#{adminnick},#{id})
 </insert>
 <update id="LingoAdminUpdate" parameterType="java.util.Map">
 	update admin set adminnick = #{adminnick} where id=#{id}
 </update>
 <delete id="LingoAdminDelete" parameterType="java.util.Map">
 	delete from admin where id=#{id}
 </delete>
 <select id="LingoAdminCount" resultType="int">
	select count(*) from admin
 </select>

 <insert id="LingoBlackInsert" parameterType="java.util.Map">
 	insert into blacklist(storeno,id,reason,added) value(#{storeno},#{id},#{reason},false)
 </insert>
 <update id="LingoBlackUpdate" parameterType="java.util.Map">
 	update blacklist set added = true where id=#{id} and storeno=#{storeno}
 </update>
 <delete id="LingoBlackDelete" parameterType="java.util.Map">
 	delete from blacklist where id=#{id} and storeno=#{storeno}
 </delete>
 <select id="LingoBlackSelect" parameterType="java.util.Map" resultType="blacklistDTO">
 	select id,added from blacklist where storeno = #{storeno} 
 </select>
 <select id="LingoIsBlack" parameterType="java.util.Map" resultType="int">
 	select count(*) from blacklist where id= #{id} and storeno = #{storeno} 
 </select>
 <select id="LingoBlackSelectAdminApply" parameterType="java.util.Map" resultType="blacklistDTO">
 	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select b.*,u.tel,email,storename from blacklist b join user u on b.id=u.id join store s on s.storeno=b.storeno where added = false) t, (select @rownum:=0) b order by blackdate desc) tab where rnum between #{start} and #{end}
 </select>
  <select id="LingoBlackGetTotalRecordApply" resultType="int" >
 	select count(*) from blacklist where added = false
 </select>
  <select id="LingoBlackSelectAdminList" parameterType="java.util.Map" resultType="blacklistDTO">
 	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select b.*,u.tel,email,storename from blacklist b join user u on b.id=u.id join store s on s.storeno=b.storeno where added = true) t, (select @rownum:=0) b 
 		<if test="searchColumn!=null and !searchColumn.equals('')">
 		  where t.${searchColumn} like '%${searchWord}%'
 		</if>
 	 order by blackdate desc) tab where rnum between #{start} and #{end}
 </select>
  <select id="LingoBlackGetTotalRecordList" parameterType="java.util.Map" resultType="int" >
 	select count(*) from (select b.*,storename from blacklist b join store s on s.storeno=b.storeno) t where
 		<if test="searchColumn!=null and !searchColumn.equals('')">
 		  t.${searchColumn} like '%${searchWord}%' and
 		</if>
 	added = true
 </select>
 
 <insert id="LingoCommentInsert" parameterType="java.util.Map">
 	insert into comment(comment,id,freeno) value(#{comment},#{id},#{freeno})
 </insert>
 <delete id="LingoCommentDelete" parameterType="java.util.Map">
 	delete from comment where commentno=#{commentno}
 </delete>
 <select id="LingoCommentSelect" parameterType="java.util.Map" resultType="java.util.Map">
 	select * from comment where freeno = #{freeno} order by commentno desc
 </select>
 <delete id="LingoCommentDeleteByNo" parameterType="java.util.Map">
	delete from comment where freeno=#{freeno}
</delete>
 
 <insert id="LingoFoodimgInsert" parameterType="java.util.Map">
 	insert into foodimg(img,storeno,name,price) value(#{img},#{storeno},#{name},#{price})
 </insert>
 <delete id="LingoFoodimgDelete" parameterType="java.util.Map">
 	delete from foodimg where storeno=#{storeno}
 </delete>
 <select id="LingoFoodimgSelect" parameterType="java.util.Map" resultType="foodimgDTO">
 	select * from foodimg where storeno = #{storeno} order by count desc 
 </select>
 <select id="LingoFoodimgMenu" resultType="foodimgDTO">
 	select name,count,storename from foodimg f join store s on f.storeno=s.storeno order by count desc
 </select>
 
 
 <insert id="LingoFreeInsert" parameterType="java.util.Map">
 	insert into free(title,content,id) value(#{title},#{content},#{id})
 </insert>
 <update id="LingoFreeUpdate" parameterType="java.util.Map">
 	update free set title = #{title},content = #{content} where freeno=#{freeno}
 </update>
 <update id="LingoFreeCountUpdate" parameterType="java.util.Map">
 	update free set count = count+1 where freeno=#{freeno}
 </update>
 <delete id="LingoFreeDelete" parameterType="java.util.Map">
 	delete from free where freeno=#{freeno}
 </delete>
 <select id="LingoFreeSelectOne" parameterType="java.util.Map" resultType="freeDTO">
 	select * from free where freeno = #{freeno} 
 </select>
 <select id="LingoFreeSelectAll" parameterType="java.util.Map" resultType="freeDTO">
 	select * ,(select count(*) from comment where freeno=tab.freeno) commentcount from (select @rownum:=@rownum+1 as rnum,t.* from (select * from free 
		<if test="searchColumn!=null and !searchColumn.equals('')">
 		  where ${searchColumn} like '%${searchWord}%' 
 		</if>
	) t, (select @rownum:=0) b order by postdate desc) tab where rnum between #{start} and #{end}
 </select>
 <select id="LingoFreeGetTotalRecord" parameterType="java.util.Map" resultType="int" >
 	select count(*) from free
 	<if test="searchColumn!=null and !searchColumn.equals('')">
 		where ${searchColumn} like '%${searchWord}%' 
 	</if>
 </select>

 <insert id="LingoMapInsert" parameterType="java.util.Map">
 	insert into map(x,y,storeno,img) value(#{x},#{y},#{storeno},#{img})
 </insert>
 <update id="LingoMapUpdate" parameterType="java.util.Map">
 	update map set x = #{x},y = #{y}, img=#{img} from storeno = #{storeno}
 </update>
 <delete id="LingoMapDelete" parameterType="java.util.Map">
 	delete from map where storeno=#{storeno}
 </delete>
 <select id="LingoMapSelect" resultType="mapDTO">
 	select m.*,storename,address,tel,bigkind from store s join map m on s.storeno=m.storeno
 </select>
 <select id="LingoMapSelectbyStoreno" parameterType="java.util.Map" resultType="mapDTO">
 	select * from map where storeno = #{storeno}
 </select>
 
 <insert id="LingoNoticeInsert" parameterType="java.util.Map">
 	insert into notice(title,content,adminno) value(#{title},#{content},#{adminno})
 </insert>
 <update id="LingoNoticeUpdate" parameterType="java.util.Map">
 	update notice set title = #{title},content = #{content} where noticeno=#{noticeno}
 </update>
 <update id="LingoNoticeCountUpdate" parameterType="java.util.Map">
 	update notice set count = count+1 where noticeno=#{noticeno}
 </update>
 <delete id="LingoNoticeDelete" parameterType="java.util.Map">
 	delete from notice where noticeno=#{noticeno}
 </delete>
 <select id="LingoNoticeSelectOne" parameterType="java.util.Map" resultType="noticeDTO">
 	select n.*,adminnick from notice n join admin a on n.adminno=a.adminno where noticeno = #{noticeno} 
 </select>
 <select id="LingoNoticeSelectAll" parameterType="java.util.Map" resultType="noticeDTO">
    select * from (select @rownum:=@rownum+1 as rnum,t.* from (select n.*,adminnick from notice n join admin a on n.adminno=a.adminno) t, (select @rownum:=0) b order by noticeno desc) tab where rnum between #{start} and #{end}
 </select>
 <select id="LingoNoticeGetTotalRecord" resultType="int" >
 	select count(*) from notice
 </select>
 
 <insert id="LingoOwnerInsert" parameterType="java.util.Map">
 	insert into owner value(#{ownerno},#{storename},#{storedoc},#{id},false)
 </insert>
 <update id="LingoOwnerUpdate" parameterType="java.util.Map">
 	update owner set isallowed = true where id=#{id}
 </update>
 <update id="LingoOwnerUpdatefalse" parameterType="java.util.Map">
 	update owner set isallowed = false where id=#{id}
 </update>
 <delete id="LingoOwnerDelete" parameterType="java.util.Map">
 	delete from owner where id=#{id}
 </delete>
 <select id="LingoOwnerSelectAdminApply" parameterType="java.util.Map" resultType="ownerDTO">
 	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select o.*,regidate,tel from owner o join user u on o.id=u.id where isallowed = false) t, (select @rownum:=0) b  order by regidate desc) tab where rnum between #{start} and #{end}
 </select>
 <select id="LingoOwnerGetTotalRecordApply" resultType="int" >
 	select count(*) from owner where isallowed = false
 </select>
  <select id="LingoOwnerSelectAdminList" parameterType="java.util.Map" resultType="ownerDTO">
 	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select o.*,regidate,u.tel,storeno from owner o join user u on o.id=u.id left join store s on o.id=s.id where isallowed = true) t, (select @rownum:=0) b 
 		<if test="searchColumn!=null and !searchColumn.equals('')">
 		  where t.${searchColumn} like '%${searchWord}%'
 		</if>
 	 order by regidate desc) tab where rnum between #{start} and #{end}
 </select>
  <select id="LingoOwnerGetTotalRecordList" parameterType="java.util.Map" resultType="int" >
 	select count(*) from owner t where
 		<if test="searchColumn!=null and !searchColumn.equals('')">
 		  t.${searchColumn} like '%${searchWord}%' and
 		</if>
 	isallowed = true
 </select>
 <select id="LingoOwnerCount" resultType="int" >
 	select count(*) from owner
 </select>
 
 <select id="LingoOwnerSelect" parameterType="java.util.Map" resultType="ownerDTO">
 	select storename from owner where ownerno = #{ownerno}
 </select>
 
 <insert id="LingoQnaInsert" parameterType="java.util.Map">
 	insert into qna(kind,title,content,id) value(#{kind},#{title},#{content},#{id})
 </insert>
 <update id="LingoQnaUpdate" parameterType="java.util.Map">
 	update qna set title = #{title},content=#{content},kind=#{kind} where qnano=#{qnano}
 </update>
 <delete id="LingoQnaDelete" parameterType="java.util.Map">
 	delete from qna where qnano=#{qnano}
 </delete>
 <select id="LingoQnaSelectOne" parameterType="java.util.Map" resultType="qnaDTO">
 	select * from qna where qnano = #{qnano} 
 </select>
 <select id="LingoQnaSelectAdmin" resultType="qnaDTO">
 	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select q.qnano,title,postdate,kind,id from qna q left join reply r on q.qnano = r.qnano where replyno is null) t, (select @rownum:=0) b order by qnano desc) tab where rnum between #{start} and #{end}
 </select>
 <select id="LingoQnaSelectUser" parameterType="java.util.Map" resultType="qnaDTO">
 	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select q.qnano,kind,title,postdate,r.content from qna q left join reply r on q.qnano=r.qnano where id = #{id}) t, (select @rownum:=0) b order by qnano desc) tab where rnum between #{start} and #{end}
 </select>
  <select id="LingoQnaGetTotalRecord" parameterType="java.util.Map" resultType="int" >
 	select count(*) from qna where id = #{id}
 </select>
 <select id="LingoQnaGetTotalRecordAdmin" parameterType="java.util.Map" resultType="int" >
 	select count(*) from qna q left join reply r on q.qnano = r.qnano
 	where replyno is null 
 </select>
 
 <insert id="LingoReplyInsert" parameterType="java.util.Map">
 	insert into reply(content,qnano) value(#{content},#{qnano})
 </insert>
 <delete id="LingoReplyDelete" parameterType="java.util.Map">
 	delete from reply where replyno=#{replyno}
 </delete>
  <delete id="LingoReplyDeletebyQNA" parameterType="java.util.Map">
 	delete from reply where qnano=#{qnano}
 </delete>
 <select id="LingoReplySelect" parameterType="java.util.Map" resultType="replyDTO">
 	select replyno,content from reply where qnano = #{qnano} 
 </select>
 
<insert id="LingoReservedtableInsert" parameterType="java.util.Map">
 	insert into reservedtable(startdate,tableno,storeno,id,people) value(#{startdate},#{tableno},#{storeno},#{id},#{people})
 </insert>
 <delete id="LingoReservedtableDelete" parameterType="java.util.Map">
 	delete from reservedtable where reserveno=#{reserveno}
 </delete>
 <select id="LingoReservedtableSelect" parameterType="java.util.Map" resultType="reservedtableDTO">
 	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select r.*,tel,address,storename from reservedtable r join store s on r.storeno=s.storeno where r.storeno = #{storeno}) t, (select @rownum:=0) b where startdate > (now()-950) order by startdate) tab where rnum between #{start} and #{end}
 </select>
  <select id="LingoReservedtableValidate" parameterType="java.util.Map"  resultType="java.util.Map">
 	select tableno,startdate from reservedtable where storeno = #{storeno} and year(startdate) = year(#{startdate}) and month(startdate) = month(#{startdate}) and  day(startdate) = day(#{startdate}) order by startdate
 </select>
 <select id="LingoReservedtableSelectbyId" parameterType="java.util.Map" resultType="reservedtableDTO">
 	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select r.*,tel,address,storename from reservedtable r join store s on r.storeno=s.storeno where r.id = #{id}) t, (select @rownum:=0) b where startdate > (now()-950) order by startdate) tab where rnum between #{start} and #{end}
 </select>
 <select id="LingoReservedtableSelectAdmin" parameterType="java.util.Map" resultType="reservedtableDTO">
 	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select r.*,tel,address,storename from reservedtable r join store s on r.storeno=s.storeno) t, (select @rownum:=0) b where startdate > (now()-950) order by startdate) tab where
 		<if test="searchColumn!=null and !searchColumn.equals('')">
 		 	tab.${searchColumn} like '%${searchWord}%' and
 		</if> 
 	 rnum between #{start} and #{end}
 </select>
 <select id="LingoReservedtableSelectbyAndroid" parameterType="java.util.Map" resultType="reservedtableDTO">
 	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select r.*,tel,address,storename from reservedtable r join store s on r.storeno=s.storeno where r.id = #{id}) t, (select @rownum:=0) b where startdate > (now()-950) order by startdate) tab
 </select>
  <select id="LingoReservedtableGetTotalRecord" parameterType="java.util.Map" resultType="int" >
 	select count(*) from reservedtable where storeno=#{storeno} and startdate > (now()-950)
 </select>
 <select id="LingoReservedtableGetTotalRecordbyId" parameterType="java.util.Map" resultType="int" >
 	select count(*) from reservedtable where id=#{id} and startdate > (now()-950)
 </select>
 <select id="LingoReservedtableGetTotalRecordAdmin" parameterType="java.util.Map" resultType="int" >
 	select count(*) from (select r.*,storename from reservedtable r join store s on r.storeno=s.storeno where startdate > (now()-950)) t 
 		<if test="searchColumn!=null and !searchColumn.equals('')">
 		 	where t.${searchColumn} like '%${searchWord}%'  
 		</if> 
 </select>
 <select id="LingoReservedtableCount" resultType="int" >
 	select count(*) from reservedtable
 </select>
 
 
<select id="LingoUsedtableSelect" parameterType="java.util.Map" resultType="usedtableDTO">
 	select * from usedtable where storeno = #{storeno}
</select>
  <select id="LingoUsedtableValidate" parameterType="java.util.Map"  resultType="java.util.Map">
 	select tableno,startdate from usedtable where storeno = #{storeno} and year(startdate) = year(#{startdate}) and month(startdate) = month(#{startdate}) and  day(startdate) = day(#{startdate}) order by startdate
 </select>
<delete id="LingoUsedtableDelete" parameterType="java.util.Map">
 	delete from usedtable where storeno = #{storeno}
</delete>

<insert id="LingoReviewInsert" parameterType="java.util.Map">
 	insert into review(comment,storeno,id) value(#{comment},#{storeno},#{id})
 </insert>
 <delete id="LingoReviewDelete" parameterType="java.util.Map">
 	delete from review where reviewno=#{reviewno}
 </delete>
 <select id="LingoReviewSelect" parameterType="java.util.Map" resultType="reviewDTO">
 	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select * from review where storeno = #{storeno}) t, (select @rownum:=0) b  order by reviewno desc) tab where rnum between #{start} and #{end}
 </select>
  <select id="LingoReviewGetTotalRecord" parameterType="java.util.Map" resultType="int">
 	select count(*) from review where storeno = #{storeno}
 </select>

<insert id="LingoSaleInsert" parameterType="java.util.Map">
 	insert into sale(salesprice,storeno) value(#{salesprice},#{storeno})
 </insert>
 <delete id="LingoSaleDelete" parameterType="java.util.Map">
 	delete from sale where storeno=#{storeno}
 </delete>
 <select id="LingoSaleSelectinDay" parameterType="java.util.Map" resultType="saleDTO">
 	select * from sale where storeno = #{storeno} and year(salesdate) = year(now()) and month(salesdate) = month(now()) and  day(salesdate) = day(now()) order by salesdate desc
 </select>
 <select id="LingoSaleSelectinMonth" parameterType="java.util.Map" resultType="saleDTO">
 	 select * from sale where storeno = #{storeno} and year(salesdate) = year(now()) and month(salesdate) = month(now()) order by salesdate desc
 </select>
 <select id="LingoSaleSelectinYear" parameterType="java.util.Map" resultType="saleDTO">
 	 	select * from sale where storeno = #{storeno} and year(salesdate) = year(now()) order by salesdate desc
 </select>
<select id="LingoSaleSelectAdmin" resultType="saleDTO">
 	select sa.*,storename from sale sa join store s on sa.storeno=s.storeno order by salesdate desc
</select>

<select id="LingoSaleslistSelect" parameterType="java.util.Map" resultType="saleslistDTO">
 	select * from saleslist where salesno = #{salesno}
</select>

 <insert id="LingoStoreInsert" parameterType="java.util.Map">
 	insert into store(ownerno,id,storename,address,tel,opentime,closetime,tablenum,bigkind,atable)
 	 value(#{ownerno},#{id},#{storename},#{address},#{tel},#{opentime},#{closetime},#{tablenum},#{bigkind},#{atable})
 </insert>
 <update id="LingoStoreUpdate" parameterType="java.util.Map">
 	update store set address=#{address},tel=#{tel},opentime=#{opentime},closetime=#{closetime},tablenum=#{tablenum},bigkind=#{bigkind},atable=#{atable} where storeno=#{storeno}
 </update>
 <delete id="LingoStoreDelete" parameterType="java.util.Map">
 	delete from store where storeno=#{storeno}
 </delete>
 <select id="LingoStoreSelect" parameterType="java.util.Map" resultType="storeDTO">
 	select * from store where storeno=#{storeno}
 </select>
 <select id="LingoStoreSelectbyID" parameterType="java.util.Map" resultType="java.lang.String">
 	select storeno from store where id=#{id}
 </select>
 <select id="LingoStoreSelectStoreNamebyID" parameterType="java.util.Map" resultType="java.lang.String">
 	select storename from store where id=#{id}
 </select>
 <select id="LingoStoreSelectBest" resultType="storeDTO">
 	select storename,sum(price) totalprice from store t join sale s on t.storeno=s.storeno join saleslist l on s.salesno=l.salesno group by s.storeno order by sum(price) desc limit 1;
 </select>
 
 <insert id="LingoStoreimgInsert" parameterType="java.util.Map">
 	insert into storeimg(img,storeno) value(#{img},#{storeno})
 </insert>
 <delete id="LingoStoreimgDelete" parameterType="java.util.Map">
 	delete from storeimg where storeno=#{storeno}
 </delete>
 <select id="LingoStoreimgSelect" parameterType="java.util.Map" resultType="storeimgDTO">
 	select * from storeimg where storeno = #{storeno} 
 </select>

 <insert id="LingoUserInsert" parameterType="java.util.Map">
 	insert into user(id,pwd,email,tel,region)
 	 value(#{id},#{pwd},#{email},#{tel},#{region})
 </insert>
 <update id="LingoUserUpdate" parameterType="java.util.Map">
 	update user set pwd=#{pwd},email=#{email},tel=#{tel},region=#{region} where id=#{id}
 </update>
 <delete id="LingoUserDelete" parameterType="java.util.Map">
 	delete from user where id=#{id}
 </delete>
 <select id="LingoUserSelectAll" resultType="userDTO">
 	select * from user
 </select>
 <select id="LingoUserSelectOne" parameterType="java.util.Map" resultType="userDTO">
 	select * from user where id=#{id}
 </select>
 <select id="LingoUserCount" resultType="int">
 	select count(*) from user;
 </select>
 <select id="LingoUserCountNew" resultType="int">
 	select count(*) from user where year(regidate)=year(now()) and month(regidate)=month(now());
 </select>
<insert id="LingoVisitlistInsert" parameterType="java.util.Map">
 	insert into visitlist(id,storeno)
 	 value(#{id},#{storeno})
 </insert>
 <delete id="LingoVisitlistDelete" parameterType="java.util.Map">
 	delete from visitlist where id=#{id}
 </delete>
 <delete id="LingoVisitlistDeletebyStoreno" parameterType="java.util.Map">
 	delete from visitlist where storeno=#{storeno}
 </delete>
 <select id="LingoVisitlistSelect" parameterType="java.util.Map" resultType="visitlistDTO">
	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select v.*,email,tel from visitlist v join user u on v.id=u.id where 
		<if test="searchWord!=null and !searchWord.equals('')">
 		 	 u.id like '%${searchWord}%' and 
 		</if> 		
	  storeno=#{storeno}) t, (select @rownum:=0) b order by visitdate desc) tab where rnum between #{start} and #{end}
 </select>
 <select id="LingoVisitlistSelectbyUser" parameterType="java.util.Map" resultType="visitlistDTO">
	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select v.*,storename,tel,address from visitlist v join store s on v.storeno=s.storeno where
		<if test="searchWord!=null and !searchWord.equals('')">
 		 	 ${searchColumn} like '%${searchWord}%' and 
 		</if> 		
	  v.id=#{id}) t, (select @rownum:=0) b order by visitdate desc) tab where rnum between #{start} and #{end}
 </select>
  <select id="LingoIsVisit" parameterType="java.util.Map" resultType="int">
	select count(*) from visitlist where id=#{id} and storeno=#{storeno} and isvisited = true;
 </select>
 
 <select id="LingoVisitGetTotalRecord" parameterType="java.util.Map" resultType="int" >
 	select count(*) from visitlist where
 	<if test="searchWord!=null and !searchWord.equals('')">
 		id like '%${searchWord}%' and
 	</if>
 	 storeno=#{storeno}
 </select>
 <select id="LingoVisitGetTotalRecordbyUser" parameterType="java.util.Map" resultType="int" >
 	select count(*) from visitlist v join store s on v.storeno=s.storeno where
 	<if test="searchColumn!=null and !searchColumn.equals('')">
 		${searchColumn} like '%${searchWord}%' and
 	</if>
 	 v.id=#{id}
 </select>
 <select id="LingoVisitCount" resultType="int">
	select count(*) from visitlist where isvisited = true;
 </select>
 <select id="LingoVisitNotCount" resultType="int">
	select count(*) from visitlist where isvisited = false;
 </select>
 
 <select id="LingoAdminSelectUserlist" parameterType="java.util.Map" resultType="userinfoDTO">
 	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select u.* from user u left join admin a on u.id=a.id left join owner o on u.id=o.id where
		<if test="searchColumn!=null and !searchColumn.equals('')">
 		 	u.${searchColumn} like '%${searchWord}%' and 
 		</if> 		
	 ownerno is null and adminno is null) t, (select @rownum:=0) b order by regidate desc) tab where rnum between #{start} and #{end}
 </select>
 <select id="LingoAdminSelectAdminlist" parameterType="java.util.Map" resultType="userinfoDTO">
 	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select u.*,adminnick,adminno from user u left join admin a on u.id=a.id left join owner o on u.id=o.id where
		<if test="searchColumn!=null and !searchColumn.equals('')">
 		 	u.${searchColumn} like '%${searchWord}%' and 
 		</if> 		
	 ownerno is null and adminno is not null) t, (select @rownum:=0) b order by regidate desc) tab where rnum between #{start} and #{end}
 </select>
 <select id="LingoAdminSelectOwnerlist" parameterType="java.util.Map" resultType="userinfoDTO">
 	select * from (select @rownum:=@rownum+1 as rnum,t.* from (select u.*,ownerno from user u left join admin a on u.id=a.id left join owner o on u.id=o.id where
		<if test="searchColumn!=null and !searchColumn.equals('')">
 		 	u.${searchColumn} like '%${searchWord}%' and 
 		</if> 		
	 ownerno is not null and adminno is null) t, (select @rownum:=0) b order by regidate desc) tab where rnum between #{start} and #{end}
 </select>
 <select id="LingoAdminGetTotalUserRecord" parameterType="java.util.Map" resultType="int" >
 	select count(*) from user u left join admin a on u.id=a.id left join owner o on u.id=o.id where
 	<if test="searchColumn!=null and !searchColumn.equals('')">
 		u.${searchColumn} like '%${searchWord}%' and
 	</if>
 	 ownerno is null and adminno is null
 </select>
 <select id="LingoAdminGetTotalAdminRecord" parameterType="java.util.Map" resultType="int" >
 	select count(*) from user u left join admin a on u.id=a.id left join owner o on u.id=o.id where
 	<if test="searchColumn!=null and !searchColumn.equals('')">
 		u.${searchColumn} like '%${searchWord}%' and
 	</if>
 	 ownerno is null and adminno is not null
 </select>
 <select id="LingoAdminGetTotalOwnerRecord" parameterType="java.util.Map" resultType="int" >
 	select count(*) from user u left join admin a on u.id=a.id left join owner o on u.id=o.id where
 	<if test="searchColumn!=null and !searchColumn.equals('')">
 		u.${searchColumn} like '%${searchWord}%' and
 	</if>
 	 ownerno is not null and adminno is null
 </select>
 
 
 <insert id="LingoFCMinsert" parameterType="java.util.Map">
 	insert into fcm(token) values(#{token})
 </insert>
 <select id="LingoFCMselect" resultType="fcmDTO" >
 	select token from fcm
 </select>
  
 
</mapper>
